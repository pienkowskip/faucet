#!/usr/bin/env ruby

require 'plunder'
require 'plunder/moon_faucet'

begin
  app = Plunder.new('../configs/ovh.yml')
  faucets = [
      ['http://moonbit.co.in/', '3Mwcxhog8gVUu7Wk5U9pAgxeauuW9YkYtY'],
      ['http://moonliteco.in/', 'LfgBFMbZWmQrK54HRzxftPKWuqWm2jDZad'],
      ['http://moondoge.co.in/', '9rowG76piqa9b4PsrgEtuMz8eqoxk1NH5M'],
  ]

  app.setup_browser
  faucets.each { |url, address| Plunder::MoonFaucet.new(app.dm, url, address).claim }
rescue => exc
  begin
    app.logger.fatal { "Uncaught exception: #{exc.message} (#{exc.class})." }
    if app.dm.config.application[:error_log]
      time = Time.new
      time_str = time.strftime('%Y%m%dT%H%M%S')
      File.open(File.join(app.dm.config.application[:error_log], '%s.txt' % time_str), 'a') do |io|
        io.puts("Application crash at #{time}.", nil)
        io.puts("Uncaught exception: #{exc.message} (#{exc.class}).", nil)
        io.puts('Backtrace:', exc.backtrace)
      end
      if app.browser?
        app.browser.save_screenshot(File.join(app.dm.config.application[:error_log], '%s.png' % time_str), full: true)
        File.write(File.join(app.dm.config.application[:error_log], '%s.html' % time_str), app.browser.html)
      end
    end
  ensure
    raise exc
  end
ensure
  app.quit_browser rescue nil
end